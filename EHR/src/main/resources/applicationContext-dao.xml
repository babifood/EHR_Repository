<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
 
  <!-- bean definitions here -->
  <context:component-scan base-package="com.babifood" />
   
  <!-- 配置读取外部配置文件 -->
  <context:property-placeholder location="classpath:jdbc.properties" />
  <!-- 配置EHR数据源 -->
  <bean id="EHRdataSource" 
  	class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close" 
    p:driverClassName="${jdbc.mysql.driverClassName}"
    p:url="${jdbc.mysql.url}" 
    p:username="${jdbc.mysql.username}" 
    p:password="${jdbc.mysql.password}" />
   <!-- 配置OA数据源 -->
  <bean id="OAdataSource" 
  	class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close" 
    p:driverClassName="${jdbc.oracle.driverClassName}"
    p:url="${jdbc.oracle.url}" 
    p:username="${jdbc.oracle.username}" 
    p:password="${jdbc.oracle.password}" />
    
    <!-- 配置OA数据源 -->
  <bean id="KQdataSource" 
  	class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close" 
    p:driverClassName="${jdbc.sqlServer.driverClassName}"
    p:url="${jdbc.sqlServer.url}" 
    p:username="${jdbc.sqlServer.username}" 
    p:password="${jdbc.sqlServer.password}" />
  
  <context:annotation-config /> <!-- 此行语句使得resource autowired 等四个注解可以使用 -->
   
  <bean id="dataSource" class="com.babifood.utils.DynamicDataSource">
		<!-- 通过key-value的形式来关联数据源 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="EHRdataSource" key="EHR"></entry>
				<entry value-ref="OAdataSource" key="OA"></entry>
				<entry value-ref="KQdataSource" key="KQ"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="EHRdataSource"/>
	</bean>
   
  <!-- 实例化jdbcTemplate,同时注入数据源 -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
    p:dataSource-ref="dataSource" />
   
  <!-- 配置事务管理器 -->
  <bean id="txManager" 
  		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
  </bean>
  <!-- 事务扫描开始(开启@Tranctional) -->
  <tx:annotation-driven transaction-manager="txManager" />
 
  <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="queueCapacity" value="500" />
  </bean>
</beans>